- name: configure basics
  hosts: all
  gather_facts: no
  sudo: yes

  tasks:
    - name: ensure dependencies installed
      apt: name={{ item }}
           state=present
           update_cache=yes
      with_items:
        - sudo
        - git

    - name: create devstack group
      group: name={{ username }}

    - name: create devstack user
      user: name={{ username }}
            password={{ password }}
            group={{ username }}
            groups="adm,admin"
            shell=/bin/bash
            generate_ssh_key=yes
            ssh_key_type=rsa

    - name: passwordless sudo access for the stack user
      lineinfile: dest=/etc/sudoers.d/stack
                  line="stack ALL=(ALL) NOPASSWD:ALL"
                  state=present
                  create=True

    - name: update file permissions for the /etc/sudoers.d/stack
      file: path=/etc/sudoers.d/stack owner=root group=root mode=0440

    - name: enable IPv4 forwarding
      lineinfile: dest=/proc/sys/net/ipv4/ip_forward
                  line="1"
                  state=present

    - name: update iptables so VMs can access internet
      command: /sbin/iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE

    # TODO: copy SSH identity to all compute nodes

# the reason of splitting the following is that we really need to have first install devstack on a control node and only
# then to compute nodes.

- name: install devstack on a control nodes
  hosts: control_nodes
  gather_facts: no
  serial: 1
  sudo: yes
  sudo_user: "{{ username }}"
  tasks:
    - include: devstack.yml

- name: install devstack on a compute nodes
  hosts: compute_nodes
  gather_facts: no
  sudo: yes
  sudo_user: "{{ username }}"
  tasks:
    - include: devstack.yml


- name: configure openstack on control nodes
  hosts: control_nodes
  gather_facts: no
  sudo: yes
  sudo_user: "{{ username }}"

  vars:
    - cmd_vars: "--os-username {{ openstack_username }} --os-password {{ openstack_password }}  --os-tenant-name {{ openstack_tenant_name }} --os-auth-url {{ openstack_auth_url }}"
    - nova_cmd: "/usr/local/bin/nova {{ cmd_vars }}"

  tasks:
    - name: setup basic security rules
      command: "{{ nova_cmd }} secgroup-add-rule default {{ item }}"
      with_items:
        - icmp -1 -1 0.0.0.0/0
        - tcp 22 22 0.0.0.0/0

    - name: setup default_key keypair for stack user
      command: "{{ nova_cmd }} keypair-add --pub-key ~/.ssh/id_rsa.pub default_key"

    # - name: create images directory
    #   file: path=images
    #         state=directory

    # - name: copy images
    #   copy: src=files/{{ item }}
    #         dest=images/{{ item }}
    #   with_items:
    #     - centos-6.5-20140117.0.x86_64.qcow2

    # - name: import images into glance
    #   with_items