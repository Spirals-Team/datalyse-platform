- name: configure basics
  hosts: 127.0.0.1
  connection: local
  vars:
    - mysql_host: "{{ lookup('env', 'MYSQL_MYSQL_MASTER_HOST') }}"
  
    - rabbitmq_host: "{{ lookup('env', 'RABBITMQ_RABBITMQ_MASTER_HOST') }}"
    - rabbitmq_username: "{{ lookup('env', 'RABBITMQ_USERNAME') }}"
    - rabbitmq_password: "{{ lookup('env', 'RABBITMQ_PASSWORD') }}"
  
    - keystone_host: "{{ lookup('env', 'KEYSTONE_KEYSTONE_MASTER_HOST') }}"
    - glance_host: "{{ lookup('env', 'GLANCE_GLANCE_MASTER_HOST') }}"

    - nova_password: "{{ lookup('env', 'NOVA_PASSWORD') }}"
    - nova_controller_host: "{{ lookup('env', 'NOVA_CONTROLLER_NOVA_CONTROLLER_MASTER_HOST') }}"
    - nova_compute_host: "{{ ansible_default_ipv4.address }}"

  tasks:
    - file: >
        path=/var/lib/nova/nova.sqlite
        state=absent

    - ini_file: >
        dest="/etc/nova/nova.conf"
        section="{{ item.section }}"
        option="{{ item.option }}"
        value="{{ item.value }}"          
      with_items:
        - { section: database, option: connection, value: "mysql://nova:{{ nova_password }}@{{ mysql_host }}/nova" }
        - { section: DEFAULT, option: rpc_backend, value: rabbit }
        - { section: DEFAULT, option: rabbit_host, value: "{{ rabbitmq_host }}" }
        - { section: DEFAULT, option: rabbit_userid, value: "{{ rabbitmq_username }}" }
        - { section: DEFAULT, option: rabbit_password, value: "{{ rabbitmq_password }}" }
        - { section: DEFAULT, option: glance_host, value: "{{ glance_host }}" }
        - { section: DEFAULT, option: my_ip, value: "{{ nova_compute_host }}" }
        - { section: DEFAULT, option: vnc_enabled, value: "True" }
        - { section: DEFAULT, option: vncserver_listen, value: "0.0.0.0" }
        - { section: DEFAULT, option: vncserver_proxyclient_address, value: "{{ nova_compute_host }}" }
        - { section: DEFAULT, option: novncproxy_base_url, value: "http://{{ nova_controller_host }}:6080/vnc_auto.html" }
        - { section: DEFAULT, option: auth_strategy, value: keystone }
        # KVM
        - { section: DEFAULT, option: compute_driver, value: libvirt.LibvirtDriver }
        
        - { section: DEFAULT, option: network_api_class, value: nova.network.api.API }
        - { section: DEFAULT, option: security_group_api, value: nova }
        - { section: DEFAULT, option: firewall_driver, value:  nova.virt.libvirt.firewall.IptablesFirewallDriver }
        - { section: DEFAULT, option: network_manager, value: nova.network.manager.FlatDHCPManager }
        - { section: DEFAULT, option: network_size, value: 254 }
        - { section: DEFAULT, option: allow_same_net_traffic, value: False }
        - { section: DEFAULT, option: multi_host, value: True }
        - { section: DEFAULT, option: send_arp_for_ha, value: True }
        - { section: DEFAULT, option: share_dhcp_address, value:  True }
        - { section: DEFAULT, option: force_dhcp_release, value: True }
        - { section: DEFAULT, option: flat_network_bridge, value: br100 }
        - { section: DEFAULT, option: flat_interface, value: eth0 }
        # this is because we have only one interface - eth0
        - { section: DEFAULT, option: public_interface, value: br100 }
        
        - { section: keystone_authtoken, option: auth_uri, value: "http://{{ keystone_host }}:5000" }
        - { section: keystone_authtoken, option: identity_uri, value: "http://{{ keystone_host }}:35357" }
        - { section: keystone_authtoken, option: auth_host, value: "{{ keystone_host }}" }
        - { section: keystone_authtoken, option: auth_port, value: 35357 }
        - { section: keystone_authtoken, option: auth_protocol, value: http }
        - { section: keystone_authtoken, option: admin_tenant_name, value: service }
        - { section: keystone_authtoken, option: admin_user, value: nova }
        - { section: keystone_authtoken, option: admin_password, value: "{{ nova_password }}" }

    - name: querying the type of virtualziation
      command: egrep '(vmx|svm)' /proc/cpuinfo
      register: hw_virt
      ignore_errors: yes

    - name: setting the virtualization type (QEMU)
      ini_file: >
        dest="/etc/nova/nova.conf"
        section="libvirt"
        option="virt_type"
        value="qemu"
      when: hw_virt|failed    

    - name: setting the virtualization type (KVM)
      ini_file: >
        dest="/etc/nova/nova.conf"
        section="libvirt"
        option="virt_type"
        value="kvm"            
      when: hw_virt|success    
