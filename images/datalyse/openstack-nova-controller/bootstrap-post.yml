- name: post configure nova
  hosts: 127.0.0.1
  connection: local
  vars:
    - keystone_host: "{{ lookup('env', 'KEYSTONE_KEYSTONE_MASTER_HOST') }}"
    - keystone_endpoint: "http://{{ keystone_host }}:35357/v2.0"
    - keystone_password: "{{ lookup('env', 'KEYSTONE_PASSWORD') }}"

    - nova_controller_host: "{{ ansible_default_ipv4.address }}"
    - nova_controller_password: "{{ lookup('env', 'NOVA_PASSWORD') }}"

    - openrc:
        OS_SERVICE_TOKEN: "{{ keystone_password }}"
        OS_SERVICE_ENDPOINT: "{{ keystone_endpoint }}"

  tasks:
    - name: wait for nova-controller to be available
      wait_for: host="{{ nova_controller_host }}" port=8774

    - name: create nova user
      keystone_user:
        user: nova
        password: "{{ nova_controller_password }}"
        tenant: service
        token: "{{ keystone_password }}"
        endpoint: "{{ keystone_endpoint }}"

    - name: assign admin roles
      keystone_user:
        user: nova
        tenant: service
        role: admin
        token: "{{ keystone_password }}"
        endpoint: "{{ keystone_endpoint }}"

# TODO: the following should be handled by a module
    
    - name: delete any existing nova endpoints (since the nova IP could have changed)
      command: /usr/bin/keystone service-delete nova
      ignore_errors: True
      environment: openrc

    - name: create nova service
      command: 
        /usr/bin/keystone service-create
          --name=nova
          --type=compute
          --description='OpenStack Compute Service'
      environment: openrc

    - name: create nova endpoints
      shell: 
        /usr/bin/keystone endpoint-create
          --region RegionOne
          --service-id=$(/usr/bin/keystone service-list | awk '/ compute / {print $2}')
          --publicurl="http://{{ nova_controller_host }}:8774/v2/%(tenant_id)s"
          --internalurl="http://{{ nova_controller_host }}:8774/v2/%(tenant_id)s"
          --adminurl="http://{{ nova_controller_host }}:8774/v2/%(tenant_id)s"
      environment: openrc
