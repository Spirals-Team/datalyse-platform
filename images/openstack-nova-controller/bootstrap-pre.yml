- name: pre configure nova
  hosts: 127.0.0.1
  connection: local
  vars:
    - mysql_host: "{{ lookup('env', 'MYSQL_MYSQL_MASTER_HOST') }}"
    - mysql_username: root
    - mysql_password: "{{ lookup('env', 'MYSQL_ROOT_PASSWORD') }}"

    - rabbitmq_host: "{{ lookup('env', 'RABBITMQ_RABBITMQ_MASTER_HOST') }}"
    - rabbitmq_username: "{{ lookup('env', 'RABBITMQ_USERNAME') }}"
    - rabbitmq_password: "{{ lookup('env', 'RABBITMQ_PASSWORD') }}"
    
    - keystone_host: "{{ lookup('env', 'KEYSTONE_KEYSTONE_MASTER_HOST') }}"
    
    - glance_host: "{{ lookup('env', 'GLANCE_GLANCE_MASTER_HOST') }}"

    - nova_controller_host: "{{ ansible_default_ipv4.address }}"
    - nova_controller_password: "{{ lookup('env', 'NOVA_PASSWORD') }}"

  tasks:
    - file: path=/var/lib/nova/nova.sqlite state=absent

    - name: wait for mysql to be available
      wait_for: host="{{ mysql_host }}" port=3306
        
    - name: create nova database
      mysql_db: 
        name: nova
        encoding: utf8
        collation: utf8_general_ci

        login_host: "{{ mysql_host }}"
        login_user: "{{ mysql_username }}"
        login_password: "{{ mysql_password }}"

    - name: create nova database user
      mysql_user:
        name: nova
        password: "{{ nova_controller_password }}"
        priv: nova.*:ALL
        host: "{{ item }}"

        login_host: "{{ mysql_host }}"
        login_user: "{{ mysql_username }}"
        login_password: "{{ mysql_password }}"
      with_items:
        - localhost
        - "%"

    - name: configure nova.conf
      ini_file:
        dest="/etc/nova/nova.conf"
        section="{{ item.section }}"
        option="{{ item.option }}"
        value="{{ item.value }}"          
      with_items:
        - { section: DEFAULT, option: rpc_backend, value: rabbit }
        - { section: DEFAULT, option: rabbit_host, value: "{{ rabbitmq_host }}" }
        - { section: DEFAULT, option: rabbit_userid, value: "{{ rabbitmq_username }}" }
        - { section: DEFAULT, option: rabbit_password, value: "{{ rabbitmq_password }}" }
        - { section: DEFAULT, option: glance_host, value: "{{ glance_host }}" }
        - { section: DEFAULT, option: my_ip, value: "{{ nova_controller_host }}" }
        - { section: DEFAULT, option: vncserver_listen, value: "{{ nova_controller_host }}" }
        - { section: DEFAULT, option: vncserver_proxyclient_address, value: "{{ nova_controller_host }}" }
        - { section: DEFAULT, option: auth_strategy, value: keystone }
        - { section: DEFAULT, option: network_api_class, value: nova.network.api.API }
        - { section: DEFAULT, option: security_group_api, value: nova }

        - { section: database, option: connection, value: "mysql://nova:{{ nova_controller_password }}@{{ mysql_host }}/nova" }
        
        - { section: keystone_authtoken, option: identity_uri, value: "http://{{ keystone_host }}:35357" }
        - { section: keystone_authtoken, option: auth_uri, value: "http://{{ keystone_host }}:5000" }
        - { section: keystone_authtoken, option: auth_host, value: "{{ keystone_host }}" }
        - { section: keystone_authtoken, option: auth_port, value: 35357 }
        - { section: keystone_authtoken, option: auth_protocol, value: http }
        - { section: keystone_authtoken, option: admin_tenant_name, value: service }
        - { section: keystone_authtoken, option: admin_user, value: nova }
        - { section: keystone_authtoken, option: admin_password, value: "{{ nova_controller_password }}" }

    - name: sync nova database
      command: nova-manage db sync