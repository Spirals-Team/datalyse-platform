Random notes for working with the platform

nova network-create demo-net --bridge br100 --multi-host T --fixed-range-v4 172.17.2.0/24
ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa
nova keypair-add --pub-key ~/.ssh/id_rsa.pub admin-key
nova keypair-list
nova flavor-list

nova boot --flavor m1.tiny --image cirros --nic net-id=a62844c6-afa9-45d1-b7b0-7db8a5622551 --security-group default --key-name admin-key i1


docker exec -ti mysql mysql -p

docker run --privileged -ti --link=mysql:db --link=rabbitmq:mq --link="keystone:keystone" --link="glance:glance" --link="nova:nova" datalyse/openstack-nova-compute-docker bash
+ /usr/bin/ansible-playbook /bootstrap.yml

/usr/local/bin/docker -D -g /var/lib/docker -H unix://



modprobe ebtables.ko

env CONFIG_FILE='["/etc/nova/nova.conf"]' NETWORK_ID=1 dnsmasq --strict-order --bind-interfaces --conf-file= --pid-file=/var/lib/nova/networks/nova-br100.pid --listen-address=10.1.1.1 --except-interface=lo --dhcp-range=set:demo-net,10.1.1.2,static,255.255.255.0,120s --dhcp-lease-max=256 --dhcp-hostsfile=/var/lib/nova/networks/nova-br100.conf --dhcp-script=/usr/bin/nova-dhcpbridge --leasefile-ro --domain=novalocal --no-hosts --addn-hosts=/var/lib/nova/networks/nova-br100.hosts


--

boot2docker ssh sudo /mnt/sda1/var/lib/docker-proxy/run.sh
docker run -d -p 2375:2375 --volume=/var/run/docker.sock:/var/run/docker.sock --name=docker-http sequenceiq/socat

nova get-vnc-console i1 novnc


docker exec -ti nova-compute-kvm-1 nova-manage floating create --ip_range=172.16.1.0/24  --pool demo

docker run -d --name mysql -e MYSQL_ROOT_PASSWORD=stack mysql
docker run -d --name rabbitmq -e RABBITMQ_USER=admin -e RABBITMQ_PASS=stack tutum/rabbitmq
docker run -d --name keystone -e KEYSTONE_PASSWORD=stack --link mysql:mysql datalyse/openstack-keystone
docker run -d --name glance -e GLANCE_PASSWORD=stack --link mysql:mysql --link rabbitmq:rabbitmq --link keystone:keystone datalyse/openstack-glance
docker run -d --name nova-controller --privileged -e NOVA_PASSWORD=stack --link mysql:mysql --link rabbitmq:rabbitmq --link keystone:keystone --link glance:glance datalyse/openstack-nova-controller
docker run -d --name nova-compute-kvm --privileged --link mysql:mysql --link rabbitmq:rabbitmq --link keystone:keystone --link glance:glance --link nova-controller:nova-controller datalyse/openstack-nova-compute-kvm
docker run -d --name horizon --link keystone:keystone -p 80:80 datalyse/openstack-horizon

TODO
- docker
- cinder
- fix supervisorctl
- supervisord or not?
- network
- creating external IP

# Install maestro

The following will install maestro-ng 0.2.3. The latest development version seems to be buggy.

```sh
pip install --upgrade git+git://github.com/signalfuse/maestro-ng@f1ee6c277a2a3c48f9a400cc4b511498cbca5d23
```

1. install maestro
1. start maestro
1. configure client

    ```sh
    ssh-copy-id -p 2222 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@<ip_of_the_client_docker>
    ```

1. do a basic configuration


    ```sh
    ansible-playbook -i environments/boot2docker/inventory  basic-configuration.yml
    ```

1. create a network for floating addresses - bash through docker exec (compute / controller?)

1. import docker images - bash through docker exec (compute-docker)


  ```sh
  ansible-playbook -i environments/boot2docker/inventory  import-docker-images.yml
  ```

4. provision VMs

    - test if docker works
    
        ```sh
        nova boot --flavor m1.tiny --image rastasheep/ubuntu-sshd test
        ```

5. provision Ansible cluster
6. run SWIM

TODO:

- simplify passwords - only one: master password
- rename maestro configuration


maestor-ng does not work with docker-machine
- the only way how to make it work is to use docker-http running on some port other than 2376 and 2375
- the first problem is the SSH connection
  it requires the following in ~/.ssh/config
    Host ambari-master
      StrictHostKeyChecking no 
      UserKnownHostsFile /dev/null
  the second is an SSL error:
    SSLError: no appropriate commonName or subjectAltName fields were found
    which is raised by the ssl python library in checking hostname match:

    "RFC 2818 rules
    are mostly followed, but IP addresses are not accepted for *hostname*"
    http://svn.python.org/projects/python/tags/r32/Lib/ssl.py

docker run -d -p 2374:2375 --volume=/var/run/docker.sock:/var/run/docker.sock --name=docker-http sequenceiq/socat

